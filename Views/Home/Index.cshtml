@model IEnumerable<SigortaTakipSistemi.Models.Insurances>

@{
    ViewData["Title"] = "Ana Sayfa";
}

<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-6">
                <div class="card card-secondary">
                    <div class="card-header border-0">
                        <div class="d-flex justify-content-between">
                            <h3 class="card-title">Poliçe & Müşteri Durumları</h3>
                            <div class="card-tools">
                                <a href="#" class="btn btn-tool btn-sm" data-card-widget="collapse">
                                    <i class="fas fa-minus"></i>
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="info-box mb-4 bg-primary">
                            <span class="info-box-icon"><i class="fas fa-file-alt"></i></span>
                            <div class="info-box-content">
                                <span class="info-box-text">Toplam Poliçe</span>
                                <span class="info-box-number">@ViewBag.InsuranceCount</span>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-6">
                                <div class="info-box mb-4 bg-success">
                                    <span class="info-box-icon"><i class="fas fa-folder-open"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Aktif Toplam Poliçe</span>
                                        <span class="info-box-number">@ViewBag.ActiveInsuranceCount</span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="info-box mb-4 bg-danger">
                                    <span class="info-box-icon"><i class="fas fa-folder-minus"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">İptal & Pasif Toplam Poliçe</span>
                                        <span class="info-box-number">@ViewBag.PassiveInsuranceCount</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="info-box mb-0 bg-info">
                            <span class="info-box-icon"><i class="fas fa-users"></i></span>
                            <div class="info-box-content">
                                <span class="info-box-text">Toplam Müşteri</span>
                                <span class="info-box-number">@ViewBag.CustomerCount</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="card card-secondary">
                    <div class="card-header border-0">
                        <div class="d-flex justify-content-between">
                            <h3 class="card-title">Poliçe Sayısı Karşılaştırmaları</h3>
                            <div class="card-tools">
                                <a href="#" class="btn btn-tool btn-sm" data-card-widget="collapse">
                                    <i class="fas fa-minus"></i>
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="position-relative mb-4">
                            <canvas id="sales-chart" height="243"></canvas>
                        </div>
                        <div class="d-flex flex-row justify-content-center">
                            <span class="mr-3">
                                <i class="fas fa-square text-primary"></i> Geçen Yıl
                            </span>
                            <span>
                                <i class="fas fa-square text-gray"></i> Bu Yıl
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="card card-secondary">
            <div class="card-header border-0">
                <div class="d-flex justify-content-between">
                    <h3 class="card-title">Bitiş Süresi Son 8 Gün Olan Poliçeler</h3>
                    <div class="card-tools">
                        <a href="#" class="btn btn-tool btn-sm" data-card-widget="collapse">
                            <i class="fas fa-minus"></i>
                        </a>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive p-0">
                    <table id="ItemsTable" class="table table-striped table-valign-middle">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.Id)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Customer.FullName)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.InsurancePolicyName)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.InsurancePolicyNumber)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.InsuranceCompanyName)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.InsuranceStartDate)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.InsuranceFinishDate)
                                </th>
                                <th>
                                    Detaylar
                                </th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</section>
<br />

@section Scripts{
    <script src="~/js/datatables.min.js"></script>
    <script src="~/js/moment.min.js"></script>
    <script>
        (function () {
            var generateCustomerTable = $("#ItemsTable").DataTable({
                "language": {
                    processing: '<i class="fas fa-sync fa-spin fa-3x fa-fw"></i><span class="sr-only">Yükleniyor...</span> ',
                    zeroRecords: "Hiçbir kayıt bulunamadı.",
                    emptyTable: "Kayıt bulunmamaktadır.",
                    oPaginate: {
                        "sFirst": "İlk",
                        "sLast": "Son",
                        "sNext": "Sonraki",
                        "sPrevious": "Önceki"
                    },
                    sLengthMenu: "_MENU_ adet kayıt getir",
                    sInfo: "Toplam _TOTAL_ kayıttan _START_ - _END_ arası gösteriliyor",
                },
                "processing": true,
                "serverSide": true,
                "searching": false,
                "lengthChange": false,
                "stateSave": true,
                "stateDuration": -1,
                "ajax": {
                    "url": "/Insurance/FinishingInsurancesPost",
                    "method": "POST"
                },
                "columns": [
                    { "data": "id" },
                    { "data": "customer.fullName", "orderable": false },
                    { "data": "insurancePolicy.name", "orderable": false },
                    { "data": "insurancePolicyNumber" },
                    {
                        "data": "insuranceCompany.logoPath", render: function (data, type, row) {
                            return '<img src="' + row.insuranceCompany.logoPath + '" style="max-height:50px; max-width:75px" />'
                        },
                        "orderable": false
                    },
                    {
                        "data": "insuranceStartDate",
                        render: function (data, type, row) {
                            return window.moment(data).format("DD-MMMM-YYYY");
                        }
                    },
                    {
                        "data": "insuranceFinishDate",
                        render: function (data, type, row) {
                            return window.moment(data).format("DD-MMMM-YYYY");
                        }
                    },
                    {
                        "data": "actionId", render: function (data, type, row) {
                            return '<a href="Insurance/Details/' + row.id + '" class="text-muted"><i class="fas fa-search"></i></a>'
                        }, "orderable": false
                    }
                ],
                "ordering": true,
                "paging": true,
                "pagingType": "simple_numbers",
                "pageLength": 5
            });
            drawChart();
        })(jQuery);

        function drawChart() {
            $.ajax({
                url: "/Insurance/MonthlyInsurances",
                dataType: "json",
                type: "POST",
                contentType: "application/json; charset=utf-8",
                success: function (data) {

                    var ticksStyle = {
                        fontColor: '#495057',
                        fontStyle: 'bold'
                    }

                    var mode = 'index'
                    var intersect = true

                    var months = [['Month']];

                    $.each(data, function (index, value) {
                        months.push([value.monthName]);
                    });

                    var counts = [['Count']];

                    $.each(data, function (index, value) {
                        counts.push([value.insuranceCount]);
                    });

                    var $salesChart = $('#sales-chart')
                    var salesChart = new Chart($salesChart, {
                        type: 'bar',
                        data: {
                            labels: [months[1], months[3], months[5], months[7]],
                            datasets: [
                                {
                                    backgroundColor: '#007bff',
                                    borderColor: '#007bff',
                                    data: [counts[1][0], counts[3][0], counts[5][0], counts[7][0]]
                                },
                                {
                                    backgroundColor: '#ced4da',
                                    borderColor: '#ced4da',
                                    data: [counts[2][0], counts[4][0], counts[6][0], counts[8][0]]
                                }
                            ]
                        },
                        options: {
                            maintainAspectRatio: false,
                            tooltips: {
                                mode: mode,
                                intersect: intersect
                            },
                            hover: {
                                mode: mode,
                                intersect: intersect
                            },
                            legend: {
                                display: false
                            },
                            scales: {
                                yAxes: [{
                                    gridLines: {
                                        display: true,
                                    },
                                    ticks: ticksStyle
                                }],
                                xAxes: [{
                                    display: true,
                                    gridLines: {
                                        display: true
                                    },
                                    ticks: ticksStyle
                                }]
                            }
                        }
                    })
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert('Got an Error');
                }
            });
        }
    </script>
}
